<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Carles Hernandez-Ferrer</title>
    <link>http://212.71.254.23/tags/r/</link>
    <description>Recent content in R on Carles Hernandez-Ferrer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 27 Mar 2018 00:00:00 +0200</lastBuildDate><atom:link href="http://212.71.254.23/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Annotating KEGG compounds to pathway</title>
      <link>http://212.71.254.23/blog/annotating-kegg-compounds-to-pathway/</link>
      <pubDate>Tue, 27 Mar 2018 00:00:00 +0200</pubDate>
      
      <guid>http://212.71.254.23/blog/annotating-kegg-compounds-to-pathway/</guid>
      <description>To annotate a list of KEGG compounds to the KEGG pathways where they are involved I used the R package KEGGREST from Bioconductor.
library(KEGGREST) So, having a list of KEGG compounds saved in a character vector like kegg_compounds, we use the method keggGet in batches of maximum 10 compounds to annotate them.
The following (rudimentary) code, queries the database in batches of ten compounds fiddling a list (pathways) where it creates an entry per pathway and updates the field compounds with the compounds from kegg_compounds for each pathway.</description>
    </item>
    
    <item>
      <title>Exploring public NHANES data using Rcupcake</title>
      <link>http://212.71.254.23/blog/exploring-public-nhanes-data-using-rcupcake/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0200</pubDate>
      
      <guid>http://212.71.254.23/blog/exploring-public-nhanes-data-using-rcupcake/</guid>
      <description>The Rcupcake package contains functions to query different databases through the BD2K RESTful API. BD2K RESTful API is an interface that provides access to different data sources, making easier data accessibility, analysis reproducibility and scalability.
The package is installed via devtools using it&amp;rsquo;s GitHub URL (hms-dbmi/Rcupcake) or following their guide (also in GiHub - here).
library( Rcupcake ) library( knitr ) library( stringr ) opts_chunk$set( fig.path=&amp;#39;Figs/&amp;#39;, echo=TRUE, warning=FALSE, message=FALSE, cache=FALSE ) Rcupcake package follows a four-step process to retrieve the data from a database:</description>
    </item>
    
    <item>
      <title>Gene-Enrichment in PsyGeNET&#39;s Main-Psychiatric-Disorders</title>
      <link>http://212.71.254.23/blog/gene-enrichment-in-psygenet-s-main-psychiatric-disorders/</link>
      <pubDate>Tue, 06 Jan 2015 00:00:00 +0200</pubDate>
      
      <guid>http://212.71.254.23/blog/gene-enrichment-in-psygenet-s-main-psychiatric-disorders/</guid>
      <description>PsyGeNET is a database that integrates information on psychiatric disorders and their genes (check its About page for more information). The current version of the database centered the information of three main psychiatric disorders: Alcoholism, Depression and Cocaine-Related-Disorders.
Currently the author of PsyGeNET, Alba Guti√©rrez, and me are developing an R package (PsyGeNET2R) to query the information stored into the database and to perform some analysis using this information. We thought that could be a good idea to perform an enrichment analysis on the three main psychiatric disorders given a list of genes of interest.</description>
    </item>
    
    <item>
      <title>Winter Card 2014 - 2015</title>
      <link>http://212.71.254.23/fun/winter_card_2014-2015/</link>
      <pubDate>Thu, 18 Dec 2014 22:12:12 +0200</pubDate>
      
      <guid>http://212.71.254.23/fun/winter_card_2014-2015/</guid>
      <description>Like the previous years, I continued with the tradition of sending a geek christmas card to my workmates.
This year I wrote it in R since it is one of the most used languages at my workplace, CREAL.
Winter card 2014 - 2015: snowflake recursion!
The result of running the script I sent (just a source code that loaded a file on the cloud) is seen above. The source code for that can be found at my christmas-card&amp;rsquo;s github (link) as mc201415.</description>
    </item>
    
  </channel>
</rss>
